(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'DAL' object has no attribute 'page'"
p3
sS'layer'
p4
S'/home/kritika/web2py/applications/cookmania/controllers/default.py'
p5
sS'code'
p6
S'def user():\n    return dict(form=auth())\n\ndef index():\n    if len(request.args): page=int(request.args[0])\n    else: page=0\n    items_per_page=10\n    limitby=(page*items_per_page,(page+1)*items_per_page+1)\n    #rows=db().select(db.recipe.ALL,limitby=limitby)\n    pages=db().select(db.recipe.id,db.recipe.title,orderby=db.recipe.id,limitby=limitby)\n    return dict(page=page,items_per_page=items_per_page,pages=pages)\n\n@auth.requires_login()\ndef create():\n    form = SQLFORM(db.recipe)\n    if form.process().accepted:\n        session.flash="Add image "\n        redirect(URL(\'addimages\',args=form.vars.id))\n    return dict(form=form)\n\ndef show():\n    this_page = db.recipe(request.args(0,cast=int)) or redirect(URL(\'index\'))\n    db.comments.recipe_id.default=this_page.id\n    db.image.recipe_id.defaut=this_page.id\n    form=SQLFORM(db.comments).process() if auth.user else "login"\n    pagecomments = db(db.comments.recipe_id==this_page.id).select()\n    images= db(db.image.recipe_id==this_page.id).select(db.image.file)\n    like = db(db.likes.recipe_id == this_page.id).select()\n    no_likes = len(like)\n    return dict(page=this_page, comments=pagecomments, form=form,images=images,li=no_likes)\ndef download():\n    return response.download(request, db)\n\n@auth.requires_login()\ndef addimages():\n    r=db.recipe(request.args(0,cast=int))\n    db.image.recipe_id.default=r.id\n    form=SQLFORM(db.image)\n    form.add_button(\'Done\',URL(\'show\',args=r.id))\n    if form.process().accepted:\n        session.flash="Image Added"\n    if form.errors:\n        session.flash="TRY Again"\n    images=db(db.image.recipe_id==r.id).select()\n    return dict(form=form,images=images)\n\n@auth.requires_login()\ndef edit():\n    this_page=db.recipe(request.args(0,cast=int)) or redirect(URL(\'index\'))\n    if not this_page.created_by==auth.user_id :\n        session.flash="You cant edit this"\n        redirect(URL(\'show\',args=request.args))\n    form=SQLFORM(db.recipe,this_page).process(next=URL(\'show\',args=request.args))\n    return dict(form=form)\n\n@auth.requires_login()\ndef mypages():\n    if len(request.args): page=int(request.args[0])\n    else: page=0\n    items_per_page=10\n    limitby=(page*items_per_page,(page+1)*items_per_page+1)\n    r=db(db.recipe.created_by==auth.user_id).select(db.recipe.ALL,limitby=limitby)\n    #rows=db().select(db.recipe.ALL,limitby=limitby)\n    return dict(page=page,items_per_page=items_per_page,recipes=r)\n\n\n@auth.requires_login()\ndef add_like() :\n    this_page = db.page[request.vars.ids]\n    ret = db.likes.validate_and_insert(created_by=auth.user.id,recipe_id=this_page.id)\n    if ret.errors :\n        already_liked=(db.likes.created_by == auth.user.id) & (db.likes.recipe_id == this_page.id )\n        db(already_liked).delete()\n        session.flash = "Unliked"\n    else :\n        session.flash = "Liked"\n    like = db(db.likes.recipe_id == this_page.id).select()\n    return str(len(like))\n\nresponse._vars=response._caller(add_like)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/kritika/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/kritika/web2py/applications/cookmania/controllers/default.py", line 80, in <module>\n  File "/home/kritika/web2py/gluon/globals.py", line 412, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/kritika/web2py/gluon/tools.py", line 4236, in f\n    return action(*a, **b)\n  File "/home/kritika/web2py/applications/cookmania/controllers/default.py", line 69, in add_like\n    this_page = db.page[request.vars.ids]\n  File "/home/kritika/web2py/gluon/packages/dal/pydal/base.py", line 921, in __getattr__\n    return BasicStorage.__getattribute__(self, key)\nAttributeError: \'DAL\' object has no attribute \'page\'\n'
p11
s.